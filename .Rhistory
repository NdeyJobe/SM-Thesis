"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
C_Statistic = c(
0.689497, # MDRD - CKD Very High Risk
0.721042, # MDRD - CKD High Risk
0.767059, # MDRD - CKD Medium Risk
0.831473, # MDRD - Diabetic
0.850363, # MDRD - Hypertensive
0.728016, # CKD-EPI-2009 - CKD Very High Risk
0.760468, # CKD-EPI-2009 - CKD High Risk
0.764557, # CKD-EPI-2009 - CKD Medium Risk
0.833224, # CKD-EPI-2009 - Diabetic
0.846778, # CKD-EPI-2009 - Hypertensive
0.772997, # CKD-EPI-2021 - CKD Very High Risk
0.829159, # CKD-EPI-2021 - CKD High Risk
0.746716, # CKD-EPI-2021 - CKD Medium Risk
0.833551, # CKD-EPI-2021 - Diabetic
0.847428  # CKD-EPI-2021 - Hypertensive
),
CI_Lower = c(
0.650078, # MDRD - CKD Very High Risk
0.654219, # MDRD - CKD High Risk
0.693394, # MDRD - CKD Medium Risk
0.615344, # MDRD - Diabetic
0.779922, # MDRD - Hypertensive
0.689656, # CKD-EPI-2009 - CKD Very High Risk
0.698158, # CKD-EPI-2009 - CKD High Risk
0.689152, # CKD-EPI-2009 - CKD Medium Risk
0.638892, # CKD-EPI-2009 - Diabetic
0.764716, # CKD-EPI-2009 - Hypertensive
0.740174, # CKD-EPI-2021 - CKD Very High Risk
0.766330, # CKD-EPI-2021 - CKD High Risk
0.666305, # CKD-EPI-2021 - CKD Medium Risk
0.626526, # CKD-EPI-2021 - Diabetic
0.770194  # CKD-EPI-2021 - Hypertensive
),
CI_Upper = c(
0.731708, # MDRD - CKD Very High Risk
0.784823, # MDRD - CKD High Risk
0.836690, # MDRD - CKD Medium Risk
0.959833, # MDRD - Diabetic
0.914848, # MDRD - Hypertensive
0.764928, # CKD-EPI-2009 - CKD Very High Risk
0.816850, # CKD-EPI-2009 - CKD High Risk
0.837532, # CKD-EPI-2009 - CKD Medium Risk
0.981020, # CKD-EPI-2009 - Diabetic
0.918334, # CKD-EPI-2009 - Hypertensive
0.802591, # CKD-EPI-2021 - CKD Very High Risk
0.883217, # CKD-EPI-2021 - CKD High Risk
0.829047, # CKD-EPI-2021 - CKD Medium Risk
0.980381, # CKD-EPI-2021 - Diabetic
0.919346  # CKD-EPI-2021 - Hypertensive
)
)
# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function
# Add formatted columns for display, excluding error bar
data_black_2yr <- data_black_2yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
data_black_5yr <- data_black_5yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
# Remove repeated "Model" column values except for the first instance in each group
data_black_clean_2yr <- data_black_2yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
data_black_clean_5yr <- data_black_5yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
# Function to generate gt table without the Error_Bar column
generate_gt_table <- function(data, title) {
data %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
ungroup() %>%
select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
gt() %>%
tab_header(title = md(paste0("**Predictive Accuracy for Black Population - ", title, "**"))) %>%
cols_label(
Population = md("**Cohort / Population**"),
Model = md("**Prediction Model**"),
CI_Label = md("**C Statistic (95% CI)**")
) %>%
tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
tab_options(
table.font.size = px(40),
data_row.padding = px(12),
heading.title.font.size = px(50),
heading.title.font.weight = "bold",
column_labels.font.size = px(50),
column_labels.font.weight = "bold"
)
}
# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_black_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_black_clean_5yr, "5-Year Prediction")
# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")
data_black_2yr <- data.frame(
Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
C_Statistic = c(
0.702774, # MDRD - CKD Very High Risk
0.696685, # MDRD - CKD High Risk
0.786078, # MDRD - CKD Medium Risk
0.864345, # MDRD - Diabetic
0.911123, # MDRD - Hypertensive
0.743756, # CKD-EPI-2009 - CKD Very High Risk
0.769614, # CKD-EPI-2009 - CKD High Risk
0.777429, # CKD-EPI-2009 - CKD Medium Risk
0.854470, # CKD-EPI-2009 - Diabetic
0.901884, # CKD-EPI-2009 - Hypertensive
0.795653, # CKD-EPI-2021 - CKD Very High Risk
0.876364, # CKD-EPI-2021 - CKD High Risk
0.756884, # CKD-EPI-2021 - CKD Medium Risk
0.854470, # CKD-EPI-2021 - Diabetic
0.901888  # CKD-EPI-2021 - Hypertensive
),
CI_Lower = c(
0.654428, # MDRD - CKD Very High Risk
0.600220, # MDRD - CKD High Risk
0.644166, # MDRD - CKD Medium Risk
0.562538, # MDRD - Diabetic
0.805870, # MDRD - Hypertensive
0.701905, # CKD-EPI-2009 - CKD Very High Risk
0.691945, # CKD-EPI-2009 - CKD High Risk
0.624038, # CKD-EPI-2009 - CKD Medium Risk
0.532344, # CKD-EPI-2009 - Diabetic
0.783226, # CKD-EPI-2009 - Hypertensive
0.761234, # CKD-EPI-2021 - CKD Very High Risk
0.816572, # CKD-EPI-2021 - CKD High Risk
0.656600, # CKD-EPI-2021 - CKD Medium Risk
0.532491, # CKD-EPI-2021 - Diabetic
0.782335  # CKD-EPI-2021 - Hypertensive
),
CI_Upper = c(
0.747221, # MDRD - CKD Very High Risk
0.782037, # MDRD - CKD High Risk
0.901948, # MDRD - CKD Medium Risk
0.997970, # MDRD - Diabetic
0.987667, # MDRD - Hypertensive
0.783244, # CKD-EPI-2009 - CKD Very High Risk
0.837391, # CKD-EPI-2009 - CKD High Risk
0.894110, # CKD-EPI-2009 - CKD Medium Risk
0.997577, # CKD-EPI-2009 - Diabetic
0.918336, # CKD-EPI-2009 - Hypertensive
0.827496, # CKD-EPI-2021 - CKD Very High Risk
0.927571, # CKD-EPI-2021 - CKD High Risk
0.855732, # CKD-EPI-2021 - CKD Medium Risk
0.997577, # CKD-EPI-2021 - Diabetic
0.915984  # CKD-EPI-2021 - Hypertensive
)
)
data_black_5yr <- data.frame(
Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
C_Statistic = c(
0.689497, # MDRD - CKD Very High Risk
0.721042, # MDRD - CKD High Risk
0.767059, # MDRD - CKD Medium Risk
0.831473, # MDRD - Diabetic
0.850363, # MDRD - Hypertensive
0.728016, # CKD-EPI-2009 - CKD Very High Risk
0.760468, # CKD-EPI-2009 - CKD High Risk
0.764557, # CKD-EPI-2009 - CKD Medium Risk
0.833224, # CKD-EPI-2009 - Diabetic
0.846778, # CKD-EPI-2009 - Hypertensive
0.772997, # CKD-EPI-2021 - CKD Very High Risk
0.829159, # CKD-EPI-2021 - CKD High Risk
0.746716, # CKD-EPI-2021 - CKD Medium Risk
0.833551, # CKD-EPI-2021 - Diabetic
0.847428  # CKD-EPI-2021 - Hypertensive
),
CI_Lower = c(
0.650078, # MDRD - CKD Very High Risk
0.654219, # MDRD - CKD High Risk
0.693394, # MDRD - CKD Medium Risk
0.615344, # MDRD - Diabetic
0.779922, # MDRD - Hypertensive
0.689656, # CKD-EPI-2009 - CKD Very High Risk
0.698158, # CKD-EPI-2009 - CKD High Risk
0.689152, # CKD-EPI-2009 - CKD Medium Risk
0.638892, # CKD-EPI-2009 - Diabetic
0.764716, # CKD-EPI-2009 - Hypertensive
0.740174, # CKD-EPI-2021 - CKD Very High Risk
0.766330, # CKD-EPI-2021 - CKD High Risk
0.666305, # CKD-EPI-2021 - CKD Medium Risk
0.626526, # CKD-EPI-2021 - Diabetic
0.770194  # CKD-EPI-2021 - Hypertensive
),
CI_Upper = c(
0.731708, # MDRD - CKD Very High Risk
0.784823, # MDRD - CKD High Risk
0.836690, # MDRD - CKD Medium Risk
0.959833, # MDRD - Diabetic
0.914848, # MDRD - Hypertensive
0.764928, # CKD-EPI-2009 - CKD Very High Risk
0.816850, # CKD-EPI-2009 - CKD High Risk
0.837532, # CKD-EPI-2009 - CKD Medium Risk
0.981020, # CKD-EPI-2009 - Diabetic
0.918334, # CKD-EPI-2009 - Hypertensive
0.802591, # CKD-EPI-2021 - CKD Very High Risk
0.883217, # CKD-EPI-2021 - CKD High Risk
0.829047, # CKD-EPI-2021 - CKD Medium Risk
0.980381, # CKD-EPI-2021 - Diabetic
0.919346  # CKD-EPI-2021 - Hypertensive
)
)
# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function
# Add formatted columns for display, excluding error bar
data_black_2yr <- data_black_2yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
data_black_5yr <- data_black_5yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
# Remove repeated "Model" column values except for the first instance in each group
data_black_clean_2yr <- data_black_2yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
data_black_clean_5yr <- data_black_5yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
# Function to generate gt table without the Error_Bar column
generate_gt_table <- function(data, title) {
data %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
ungroup() %>%
select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
gt() %>%
tab_header(title = md(paste0("**Predictive Accuracy for Black Population - ", title, "**"))) %>%
cols_label(
Population = md("**Cohort / Population**"),
Model = md("**Prediction Model**"),
CI_Label = md("**C Statistic (95% CI)**")
) %>%
tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
tab_options(
table.font.size = px(40),
data_row.padding = px(12),
heading.title.font.size = px(50),
heading.title.font.weight = "bold",
column_labels.font.size = px(50),
column_labels.font.weight = "bold"
)
}
# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_black_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_black_clean_5yr, "5-Year Prediction")
# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")
# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")
# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)
# Save the combined image
image_write(combined_img, "black_combined_prediction_tables.png")
data_black_2yr <- data.frame(
Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
C_Statistic = c(
0.702774, # MDRD - CKD Very High Risk
0.696685, # MDRD - CKD High Risk
0.786078, # MDRD - CKD Medium Risk
0.864345, # MDRD - Diabetic
0.911123, # MDRD - Hypertensive
0.743756, # CKD-EPI-2009 - CKD Very High Risk
0.769614, # CKD-EPI-2009 - CKD High Risk
0.777429, # CKD-EPI-2009 - CKD Medium Risk
0.854470, # CKD-EPI-2009 - Diabetic
0.901884, # CKD-EPI-2009 - Hypertensive
0.795653, # CKD-EPI-2021 - CKD Very High Risk
0.876364, # CKD-EPI-2021 - CKD High Risk
0.756884, # CKD-EPI-2021 - CKD Medium Risk
0.854470, # CKD-EPI-2021 - Diabetic
0.901888  # CKD-EPI-2021 - Hypertensive
),
CI_Lower = c(
0.654428, # MDRD - CKD Very High Risk
0.600220, # MDRD - CKD High Risk
0.644166, # MDRD - CKD Medium Risk
0.562538, # MDRD - Diabetic
0.805870, # MDRD - Hypertensive
0.701905, # CKD-EPI-2009 - CKD Very High Risk
0.691945, # CKD-EPI-2009 - CKD High Risk
0.624038, # CKD-EPI-2009 - CKD Medium Risk
0.532344, # CKD-EPI-2009 - Diabetic
0.783226, # CKD-EPI-2009 - Hypertensive
0.761234, # CKD-EPI-2021 - CKD Very High Risk
0.816572, # CKD-EPI-2021 - CKD High Risk
0.656600, # CKD-EPI-2021 - CKD Medium Risk
0.532491, # CKD-EPI-2021 - Diabetic
0.782335  # CKD-EPI-2021 - Hypertensive
),
CI_Upper = c(
0.747221, # MDRD - CKD Very High Risk
0.782037, # MDRD - CKD High Risk
0.901948, # MDRD - CKD Medium Risk
0.997970, # MDRD - Diabetic
0.987667, # MDRD - Hypertensive
0.783244, # CKD-EPI-2009 - CKD Very High Risk
0.837391, # CKD-EPI-2009 - CKD High Risk
0.894110, # CKD-EPI-2009 - CKD Medium Risk
0.997577, # CKD-EPI-2009 - Diabetic
0.918336, # CKD-EPI-2009 - Hypertensive
0.827496, # CKD-EPI-2021 - CKD Very High Risk
0.927571, # CKD-EPI-2021 - CKD High Risk
0.855732, # CKD-EPI-2021 - CKD Medium Risk
0.997577, # CKD-EPI-2021 - Diabetic
0.915984  # CKD-EPI-2021 - Hypertensive
)
)
data_black_5yr <- data.frame(
Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
"CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
C_Statistic = c(
0.689497, # MDRD - CKD Very High Risk
0.721042, # MDRD - CKD High Risk
0.767059, # MDRD - CKD Medium Risk
0.831473, # MDRD - Diabetic
0.850363, # MDRD - Hypertensive
0.728016, # CKD-EPI-2009 - CKD Very High Risk
0.760468, # CKD-EPI-2009 - CKD High Risk
0.764557, # CKD-EPI-2009 - CKD Medium Risk
0.833224, # CKD-EPI-2009 - Diabetic
0.846778, # CKD-EPI-2009 - Hypertensive
0.772997, # CKD-EPI-2021 - CKD Very High Risk
0.829159, # CKD-EPI-2021 - CKD High Risk
0.746716, # CKD-EPI-2021 - CKD Medium Risk
0.833551, # CKD-EPI-2021 - Diabetic
0.847428  # CKD-EPI-2021 - Hypertensive
),
CI_Lower = c(
0.650078, # MDRD - CKD Very High Risk
0.654219, # MDRD - CKD High Risk
0.693394, # MDRD - CKD Medium Risk
0.615344, # MDRD - Diabetic
0.779922, # MDRD - Hypertensive
0.689656, # CKD-EPI-2009 - CKD Very High Risk
0.698158, # CKD-EPI-2009 - CKD High Risk
0.689152, # CKD-EPI-2009 - CKD Medium Risk
0.638892, # CKD-EPI-2009 - Diabetic
0.764716, # CKD-EPI-2009 - Hypertensive
0.740174, # CKD-EPI-2021 - CKD Very High Risk
0.766330, # CKD-EPI-2021 - CKD High Risk
0.666305, # CKD-EPI-2021 - CKD Medium Risk
0.626526, # CKD-EPI-2021 - Diabetic
0.770194  # CKD-EPI-2021 - Hypertensive
),
CI_Upper = c(
0.731708, # MDRD - CKD Very High Risk
0.784823, # MDRD - CKD High Risk
0.836690, # MDRD - CKD Medium Risk
0.959833, # MDRD - Diabetic
0.914848, # MDRD - Hypertensive
0.764928, # CKD-EPI-2009 - CKD Very High Risk
0.816850, # CKD-EPI-2009 - CKD High Risk
0.837532, # CKD-EPI-2009 - CKD Medium Risk
0.981020, # CKD-EPI-2009 - Diabetic
0.918334, # CKD-EPI-2009 - Hypertensive
0.802591, # CKD-EPI-2021 - CKD Very High Risk
0.883217, # CKD-EPI-2021 - CKD High Risk
0.829047, # CKD-EPI-2021 - CKD Medium Risk
0.980381, # CKD-EPI-2021 - Diabetic
0.919346  # CKD-EPI-2021 - Hypertensive
)
)
# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function
# Add formatted columns for display, excluding error bar
data_black_2yr <- data_black_2yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
data_black_5yr <- data_black_5yr %>%
mutate(
CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
)
# Remove repeated "Model" column values except for the first instance in each group
data_black_clean_2yr <- data_black_2yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
data_black_clean_5yr <- data_black_5yr %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
ungroup()
# Function to generate gt table without the Error_Bar column
generate_gt_table <- function(data, title) {
data %>%
group_by(Model) %>%
mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
ungroup() %>%
select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
gt() %>%
tab_header(title = md(paste0("**Predictive Accuracy for Black Population - ", title, "**"))) %>%
cols_label(
Population = md("**Cohort / Population**"),
Model = md("**Prediction Model**"),
CI_Label = md("**C Statistic (95% CI)**")
) %>%
tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
tab_options(
table.font.size = px(40),
data_row.padding = px(12),
heading.title.font.size = px(50),
heading.title.font.weight = "bold",
column_labels.font.size = px(50),
column_labels.font.weight = "bold"
)
}
# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_black_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_black_clean_5yr, "5-Year Prediction")
# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")
# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")
# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)
# Save the combined image
image_write(combined_img, "black_combined_prediction_tables.png")
```{r}
# Load necessary library
library(grid)
# Define image dimensions
img_width <- 500
img_height <- 300
# Define text content
header_text <- "Overall prevalence of CKD in Africa: 15.8%\nPrevalence in SSA: 13.9%"
regions <- list(
list("West Africa:", "19.8%", "red"),
list("Middle Africa:", "16.0%", "lightgreen"),
list("East Africa:", "14.4%", "purple"),
list("Southern Africa:", "10.4%", "gray"),
list("North Africa:", "6.1%", "blue")
)
# Create a blank image
png("ckd_prevalence_africa.png", width = img_width, height = img_height)
grid.newpage()
# Draw header text
header_font_size <- 16
x_start <- 0.1
y_start <- 0.9
grid.text(header_text, x = x_start, y = y_start, just = "left", gp = gpar(fontsize = header_font_size, fontface = "bold"))
# Draw legend
font_size <- 12
box_size <- 0.02
padding <- 0.02
y_offset <- y_start - 2 * padding
for (region in regions) {
# Extract region info
region_name <- region[[1]]
percentage <- region[[2]]
color <- region[[3]]
# Draw color box
grid.rect(x = x_start, y = y_offset, width = box_size, height = box_size, just = "left", gp = gpar(fill = color))
# Draw text
grid.text(paste(region_name, percentage), x = x_start + box_size + padding, y = y_offset + 0.005, just = "left", gp = gpar(fontsize = font_size))
# Update y_offset for next row
y_offset <- y_offset - (box_size + padding)
}
# Save and close the image
dev.off()
