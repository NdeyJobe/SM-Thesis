---
title: "Untitled"
format: html
---

# Half Model

```{r}
# Load necessary libraries
library(gt)
library(dplyr)

# Define the necessary structure for Asian population only
data_asian <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(0.82, 0.80, 0.78, 0.84, 0.81, 
                  0.82, 0.81, 0.79, 0.83, 0.82, 
                  0.79, 0.78, 0.76, 0.82, 0.79),
  CI_Lower = c(0.72, 0.71, 0.70, 0.73, 0.76, 
               0.71, 0.74, 0.73, 0.78, 0.77, 
               0.65, 0.66, 0.65, 0.69, 0.70),
  CI_Upper = c(0.92, 0.89, 0.87, 0.90, 0.88, 
               0.91, 0.88, 0.85, 0.87, 0.89, 
               0.89, 0.88, 0.85, 0.87, 0.85)
)

# Add formatted columns for display
data_asian <- data_asian %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper),
    Error_Bar = case_when(
      Model == "MDRD" ~ paste0("⎯", strrep("⎯", round((C_Statistic - CI_Lower) / 0.01)), "●", strrep("⎯", round((CI_Upper - C_Statistic) / 0.01)), "⎯"),
      Model == "CKD-EPI-2009" ~ paste0("⎯", strrep("⎯", round((C_Statistic - CI_Lower) / 0.01)), "●", strrep("⎯", round((CI_Upper - C_Statistic) / 0.01)), "⎯"),
      Model == "CKD-EPI-2021" ~ paste0("⎯", strrep("⎯", round((C_Statistic - CI_Lower) / 0.01)), "●", strrep("⎯", round((CI_Upper - C_Statistic) / 0.01)), "⎯")
    )
  )

# Remove repeated "Model" column values except for the first instance in each group
data_asian_clean <- data_asian %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

# Create gt table with custom color styling based on row grouping
gt_table_asian <- gt(data_asian_clean %>% select(-C_Statistic, -CI_Lower, -CI_Upper)) %>%
  tab_header(title = md("**Predictive Accuracy for Asian Population - C Statistic (95% CI)**")) %>%
  cols_label(
    Population = md("**Cohort / Population**"),
    Model = md("**Prediction Model**"),
    CI_Label = md("**C Statistic (95% CI)**"),
    Error_Bar = md("**Error Bar with Point Estimate**")
  ) %>%
  tab_row_group(
    label = md("**CKD-EPI-2021**"),
    rows = 11:15
  ) %>%
  tab_row_group(
    label = md("**CKD-EPI-2009**"),
    rows = 6:10
  ) %>%
  tab_row_group(
    label = md("**MDRD**"),
    rows = 1:5
  ) %>%
  fmt_markdown(columns = c(Population, Model)) %>%
  # Add colors specifically based on Model groupings
  tab_style(
    style = cell_text(weight = "bold", color = "red"),
    locations = cells_body(columns = vars(Error_Bar), rows = 11:15) # CKD-EPI-2021
  ) %>%
  tab_style(
    style = cell_text(weight = "bold", color = "green"),
    locations = cells_body(columns = vars(Error_Bar), rows = 6:10) # CKD-EPI-2009
  ) %>%
  tab_style(
    style = cell_text(weight = "bold", color = "blue"),
    locations = cells_body(columns = vars(Error_Bar), rows = 1:5) # MDRD
  ) %>%
  
  tab_style(
    style = cell_text(size = px(14), color = "gray", align = "center"),
    locations = cells_source_notes()
  ) %>%
  tab_options(
    table.font.size = px(14),
    data_row.padding = px(8),
    heading.title.font.size = px(20),
    column_labels.font.size = px(18)
  )

# Display the table
gt_table_asian

```

# Full model

```{r}
# Load necessary libraries
library(gt)
library(dplyr)
library(magick)
library(webshot2)  # Required to capture HTML as an image


# Define the data structure for both 2-year and 5-year predictions
#data_asian_2yr <- data_asian
#data_asian_5yr <- data_asian

# Create a function to generate a gt table
generate_gt_table <- function(data, title) {
  data %>%
    group_by(Model) %>%
    mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
    ungroup() %>%
    select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Keep structure as requested
    gt() %>%
    tab_header(title = md(paste0("**Predictive Accuracy for Asian Population - ", title, "**"))) %>%
    cols_label(
      Population = md("**Cohort / Population**"),
      Model = md("**Prediction Model**"),
      CI_Label = md("**C Statistic (95% CI)**"),
      Error_Bar = md("**Error Bar with Point Estimate**")
    ) %>%
    tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
    tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
    tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
    fmt_markdown(columns = c(Population, Model)) %>%
    tab_style(style = cell_text(weight = "bold", color = "red"), locations = cells_body(columns = c(Error_Bar), rows = 11:15)) %>%
    tab_style(style = cell_text(weight = "bold", color = "green"), locations = cells_body(columns = c(Error_Bar), rows = 6:10)) %>%
    tab_style(style = cell_text(weight = "bold", color = "blue"), locations = cells_body(columns = c(Error_Bar), rows = 1:5)) %>%
    tab_options(
      table.font.size = px(14),
      data_row.padding = px(8),
      heading.title.font.size = px(20),
      column_labels.font.size = px(18)
    )
}

# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_asian_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_asian_5yr, "5-Year Prediction")

# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")

# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")

# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)

# Save the combined image
image_write(combined_img, "combined_prediction_tables.png")

```

# Asian

```{r}
data_asian_2yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.824268, # MDRD - CKD Very High Risk
    0.672556, # MDRD - CKD High Risk
    0.901895, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    1.000000, # MDRD - Hypertensive
    0.817991, # CKD-EPI-2009 - CKD Very High Risk
    0.649123, # CKD-EPI-2009 - CKD High Risk
    0.873491, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    1.000000, # CKD-EPI-2009 - Hypertensive
    0.792363, # CKD-EPI-2021 - CKD Very High Risk
    0.792363, # CKD-EPI-2021 - CKD High Risk
    0.877245, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    1.000000  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.716796, # MDRD - CKD Very High Risk
    0.470177, # MDRD - CKD High Risk
    0.800953, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    1.000000, # MDRD - Hypertensive
    0.708241, # CKD-EPI-2009 - CKD Very High Risk
    0.471057, # CKD-EPI-2009 - CKD High Risk
    0.210791, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    1.000000, # CKD-EPI-2009 - Hypertensive
    0.665732, # CKD-EPI-2021 - CKD Very High Risk
    0.438168, # CKD-EPI-2021 - CKD High Risk
    0.182623, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    1.000000  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.920117, # MDRD - CKD Very High Risk
    1.000000, # MDRD - CKD High Risk
    0.986492, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    1.000000, # MDRD - Hypertensive
    0.909698, # CKD-EPI-2009 - CKD Very High Risk
    1.000000, # CKD-EPI-2009 - CKD High Risk
    0.974717, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    1.000000, # CKD-EPI-2009 - Hypertensive
    0.909877, # CKD-EPI-2021 - CKD Very High Risk
    1.000000, # CKD-EPI-2021 - CKD High Risk
    0.975605, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    1.000000  # CKD-EPI-2021 - Hypertensive
  )
)


data_asian_5yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.823409, # MDRD - CKD Very High Risk
    0.735294, # MDRD - CKD High Risk
    0.798039, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    0.746914, # MDRD - Hypertensive
    0.817249, # CKD-EPI-2009 - CKD Very High Risk
    0.727811, # CKD-EPI-2009 - CKD High Risk
    0.784967, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    0.737654, # CKD-EPI-2009 - Hypertensive
    0.791691, # CKD-EPI-2021 - CKD Very High Risk
    0.791691, # CKD-EPI-2021 - CKD High Risk
    0.789270, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    0.737654  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.704901, # MDRD - CKD Very High Risk
    0.509451, # MDRD - CKD High Risk
    0.485806, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    0.403540, # MDRD - Hypertensive
    0.701012, # CKD-EPI-2009 - CKD Very High Risk
    0.502408, # CKD-EPI-2009 - CKD High Risk
    0.349130, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    0.406302, # CKD-EPI-2009 - Hypertensive
    0.652066, # CKD-EPI-2021 - CKD Very High Risk
    0.457040, # CKD-EPI-2021 - CKD High Risk
    0.259102, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    0.406177  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.918060, # MDRD - CKD Very High Risk
    0.967742, # MDRD - CKD High Risk
    0.929987, # MDRD - CKD Medium Risk
    NA,       # MDRD - Diabetic
    1.000000, # MDRD - Hypertensive
    0.915068, # CKD-EPI-2009 - CKD Very High Risk
    0.982615, # CKD-EPI-2009 - CKD High Risk
    0.924220, # CKD-EPI-2009 - CKD Medium Risk
    NA,       # CKD-EPI-2009 - Diabetic
    1.000000, # CKD-EPI-2009 - Hypertensive
    0.897474, # CKD-EPI-2021 - CKD Very High Risk
    0.977689, # CKD-EPI-2021 - CKD High Risk
    0.932762, # CKD-EPI-2021 - CKD Medium Risk
    NA,       # CKD-EPI-2021 - Diabetic
    1.000000  # CKD-EPI-2021 - Hypertensive
  )
)



# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function

# Add formatted columns for display, excluding error bar length
data_asian_2yr <- data_asian_2yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

data_asian_5yr <- data_asian_5yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

# Replace NA values with empty strings for character columns
data_asian_2yr <- data_asian_2yr %>% 
  mutate(across(where(is.character), ~replace_na(.x, "")))

data_asian_5yr <- data_asian_5yr %>% 
  mutate(across(where(is.character), ~replace_na(.x, "")))

# Function to generate gt table
generate_gt_table <- function(data, title) {
  data %>%
    group_by(Model) %>%
    mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
    ungroup() %>%
    select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
    gt() %>%
    tab_header(title = md(paste0("**Predictive Accuracy for Asian Population - ", title, "**"))) %>%
    cols_label(
      Population = md("**Cohort / Population**"),
      Model = md("**Prediction Model**"),
      CI_Label = md("**C Statistic (95% CI)**")
    ) %>%
    tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
    tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
    tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
    fmt_markdown(columns = c(Population, Model, CI_Label)) %>% # Apply bold markdown styling to data cells
    tab_options(
      table.font.size = px(40),
      data_row.padding = px(12),
      heading.title.font.size = px(50),
      heading.title.font.weight = "bold",
      column_labels.font.size = px(50),
      column_labels.font.weight = "bold"
    )
}

# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_asian_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_asian_5yr, "5-Year Prediction")

# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")

# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")

# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)

# Save the combined image
image_write(combined_img, "asian_combined_prediction_tables.png")

```

```         
```

# Black

```{r}
data_black_2yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.702774, # MDRD - CKD Very High Risk
    0.696685, # MDRD - CKD High Risk
    0.786078, # MDRD - CKD Medium Risk
    0.864345, # MDRD - Diabetic
    0.911123, # MDRD - Hypertensive
    0.743756, # CKD-EPI-2009 - CKD Very High Risk
    0.769614, # CKD-EPI-2009 - CKD High Risk
    0.777429, # CKD-EPI-2009 - CKD Medium Risk
    0.854470, # CKD-EPI-2009 - Diabetic
    0.901884, # CKD-EPI-2009 - Hypertensive
    0.795653, # CKD-EPI-2021 - CKD Very High Risk
    0.876364, # CKD-EPI-2021 - CKD High Risk
    0.756884, # CKD-EPI-2021 - CKD Medium Risk
    0.854470, # CKD-EPI-2021 - Diabetic
    0.901888  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.654428, # MDRD - CKD Very High Risk
    0.600220, # MDRD - CKD High Risk
    0.644166, # MDRD - CKD Medium Risk
    0.562538, # MDRD - Diabetic
    0.805870, # MDRD - Hypertensive
    0.701905, # CKD-EPI-2009 - CKD Very High Risk
    0.691945, # CKD-EPI-2009 - CKD High Risk
    0.624038, # CKD-EPI-2009 - CKD Medium Risk
    0.532344, # CKD-EPI-2009 - Diabetic
    0.783226, # CKD-EPI-2009 - Hypertensive
    0.761234, # CKD-EPI-2021 - CKD Very High Risk
    0.816572, # CKD-EPI-2021 - CKD High Risk
    0.656600, # CKD-EPI-2021 - CKD Medium Risk
    0.532491, # CKD-EPI-2021 - Diabetic
    0.782335  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.747221, # MDRD - CKD Very High Risk
    0.782037, # MDRD - CKD High Risk
    0.901948, # MDRD - CKD Medium Risk
    0.997970, # MDRD - Diabetic
    0.987667, # MDRD - Hypertensive
    0.783244, # CKD-EPI-2009 - CKD Very High Risk
    0.837391, # CKD-EPI-2009 - CKD High Risk
    0.894110, # CKD-EPI-2009 - CKD Medium Risk
    0.997577, # CKD-EPI-2009 - Diabetic
    0.918336, # CKD-EPI-2009 - Hypertensive
    0.827496, # CKD-EPI-2021 - CKD Very High Risk
    0.927571, # CKD-EPI-2021 - CKD High Risk
    0.855732, # CKD-EPI-2021 - CKD Medium Risk
    0.997577, # CKD-EPI-2021 - Diabetic
    0.915984  # CKD-EPI-2021 - Hypertensive
  )
)


data_black_5yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.689497, # MDRD - CKD Very High Risk
    0.721042, # MDRD - CKD High Risk
    0.767059, # MDRD - CKD Medium Risk
    0.831473, # MDRD - Diabetic
    0.850363, # MDRD - Hypertensive
    0.728016, # CKD-EPI-2009 - CKD Very High Risk
    0.760468, # CKD-EPI-2009 - CKD High Risk
    0.764557, # CKD-EPI-2009 - CKD Medium Risk
    0.833224, # CKD-EPI-2009 - Diabetic
    0.846778, # CKD-EPI-2009 - Hypertensive
    0.772997, # CKD-EPI-2021 - CKD Very High Risk
    0.829159, # CKD-EPI-2021 - CKD High Risk
    0.746716, # CKD-EPI-2021 - CKD Medium Risk
    0.833551, # CKD-EPI-2021 - Diabetic
    0.847428  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.650078, # MDRD - CKD Very High Risk
    0.654219, # MDRD - CKD High Risk
    0.693394, # MDRD - CKD Medium Risk
    0.615344, # MDRD - Diabetic
    0.779922, # MDRD - Hypertensive
    0.689656, # CKD-EPI-2009 - CKD Very High Risk
    0.698158, # CKD-EPI-2009 - CKD High Risk
    0.689152, # CKD-EPI-2009 - CKD Medium Risk
    0.638892, # CKD-EPI-2009 - Diabetic
    0.764716, # CKD-EPI-2009 - Hypertensive
    0.740174, # CKD-EPI-2021 - CKD Very High Risk
    0.766330, # CKD-EPI-2021 - CKD High Risk
    0.666305, # CKD-EPI-2021 - CKD Medium Risk
    0.626526, # CKD-EPI-2021 - Diabetic
    0.770194  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.731708, # MDRD - CKD Very High Risk
    0.784823, # MDRD - CKD High Risk
    0.836690, # MDRD - CKD Medium Risk
    0.959833, # MDRD - Diabetic
    0.914848, # MDRD - Hypertensive
    0.764928, # CKD-EPI-2009 - CKD Very High Risk
    0.816850, # CKD-EPI-2009 - CKD High Risk
    0.837532, # CKD-EPI-2009 - CKD Medium Risk
    0.981020, # CKD-EPI-2009 - Diabetic
    0.918334, # CKD-EPI-2009 - Hypertensive
    0.802591, # CKD-EPI-2021 - CKD Very High Risk
    0.883217, # CKD-EPI-2021 - CKD High Risk
    0.829047, # CKD-EPI-2021 - CKD Medium Risk
    0.980381, # CKD-EPI-2021 - Diabetic
    0.919346  # CKD-EPI-2021 - Hypertensive
  )
)



# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function

# Add formatted columns for display, excluding error bar
data_black_2yr <- data_black_2yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

data_black_5yr <- data_black_5yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

# Remove repeated "Model" column values except for the first instance in each group
data_black_clean_2yr <- data_black_2yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

data_black_clean_5yr <- data_black_5yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

# Function to generate gt table without the Error_Bar column
generate_gt_table <- function(data, title) {
  data %>%
    group_by(Model) %>%
    mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
    ungroup() %>%
    select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
    gt() %>%
    tab_header(title = md(paste0("**Predictive Accuracy for Black Population - ", title, "**"))) %>%
    cols_label(
      Population = md("**Cohort / Population**"),
      Model = md("**Prediction Model**"),
      CI_Label = md("**C Statistic (95% CI)**")
    ) %>%
    tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
    tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
    tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
    fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
    tab_options(
      table.font.size = px(40),
      data_row.padding = px(12),
      heading.title.font.size = px(50),
      heading.title.font.weight = "bold",
      column_labels.font.size = px(50),
      column_labels.font.weight = "bold"
    )
}

# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_black_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_black_clean_5yr, "5-Year Prediction")

# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")

# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")

# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)

# Save the combined image
image_write(combined_img, "black_combined_prediction_tables.png")

```

# White

```{r}
data_white_2yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.791366, # MDRD - CKD Very High Risk
    0.772592, # MDRD - CKD High Risk
    0.673719, # MDRD - CKD Medium Risk
    0.977574, # MDRD - Diabetic
    0.973074, # MDRD - Hypertensive
    0.822185, # CKD-EPI-2009 - CKD Very High Risk
    0.830902, # CKD-EPI-2009 - CKD High Risk
    0.699743, # CKD-EPI-2009 - CKD Medium Risk
    0.970476, # CKD-EPI-2009 - Diabetic
    0.970753, # CKD-EPI-2009 - Hypertensive
    0.783846, # CKD-EPI-2021 - CKD Very High Risk
    0.834448, # CKD-EPI-2021 - CKD High Risk
    0.707269, # CKD-EPI-2021 - CKD Medium Risk
    0.975573, # CKD-EPI-2021 - Diabetic
    0.970928  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.758873, # MDRD - CKD Very High Risk
    0.621686, # MDRD - CKD High Risk
    0.563652, # MDRD - CKD Medium Risk
    0.944478, # MDRD - Diabetic
    0.939395, # MDRD - Hypertensive
    0.793316, # CKD-EPI-2009 - CKD Very High Risk
    0.703493, # CKD-EPI-2009 - CKD High Risk
    0.599933, # CKD-EPI-2009 - CKD Medium Risk
    0.934661, # CKD-EPI-2009 - Diabetic
    0.934311, # CKD-EPI-2009 - Hypertensive
    0.750488, # CKD-EPI-2021 - CKD Very High Risk
    0.706764, # CKD-EPI-2021 - CKD High Risk
    0.618667, # CKD-EPI-2021 - CKD Medium Risk
    0.937444, # CKD-EPI-2021 - Diabetic
    0.936047  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.825679, # MDRD - CKD Very High Risk
    0.903674, # MDRD - CKD High Risk
    0.762453, # MDRD - CKD Medium Risk
    0.995505, # MDRD - Diabetic
    0.997478, # MDRD - Hypertensive
    0.850307, # CKD-EPI-2009 - CKD Very High Risk
    0.943623, # CKD-EPI-2009 - CKD High Risk
    0.793711, # CKD-EPI-2009 - CKD Medium Risk
    0.994592, # CKD-EPI-2009 - Diabetic
    0.995747, # CKD-EPI-2009 - Hypertensive
    0.816461, # CKD-EPI-2021 - CKD Very High Risk
    0.938379, # CKD-EPI-2021 - CKD High Risk
    0.797139, # CKD-EPI-2021 - CKD Medium Risk
    0.995003, # CKD-EPI-2021 - Diabetic
    0.994748  # CKD-EPI-2021 - Hypertensive
  )
)


data_white_5yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.779858, # MDRD - CKD Very High Risk
    0.821257, # MDRD - CKD High Risk
    0.656117, # MDRD - CKD Medium Risk
    0.956883, # MDRD - Diabetic
    0.941542, # MDRD - Hypertensive
    0.809979, # CKD-EPI-2009 - CKD Very High Risk
    0.847657, # CKD-EPI-2009 - CKD High Risk
    0.685677, # CKD-EPI-2009 - CKD Medium Risk
    0.954455, # CKD-EPI-2009 - Diabetic
    0.937942, # CKD-EPI-2009 - Hypertensive
    0.771148, # CKD-EPI-2021 - CKD Very High Risk
    0.845193, # CKD-EPI-2021 - CKD High Risk
    0.715033, # CKD-EPI-2021 - CKD Medium Risk
    0.955445, # CKD-EPI-2021 - Diabetic
    0.938589  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.744875, # MDRD - CKD Very High Risk
    0.739140, # MDRD - CKD High Risk
    0.587188, # MDRD - CKD Medium Risk
    0.926959, # MDRD - Diabetic
    0.904804, # MDRD - Hypertensive
    0.781708, # CKD-EPI-2009 - CKD Very High Risk
    0.779945, # CKD-EPI-2009 - CKD High Risk
    0.623208, # CKD-EPI-2009 - CKD Medium Risk
    0.925127, # CKD-EPI-2009 - Diabetic
    0.900165, # CKD-EPI-2009 - Hypertensive
    0.739568, # CKD-EPI-2021 - CKD Very High Risk
    0.772304, # CKD-EPI-2021 - CKD High Risk
    0.693685, # CKD-EPI-2021 - CKD Medium Risk
    0.923850, # CKD-EPI-2021 - Diabetic
    0.900662  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.809310, # MDRD - CKD Very High Risk
    0.891642, # MDRD - CKD High Risk
    0.717589, # MDRD - CKD Medium Risk
    0.987227, # MDRD - Diabetic
    0.971812, # MDRD - Hypertensive
    0.838763, # CKD-EPI-2009 - CKD Very High Risk
    0.908564, # CKD-EPI-2009 - CKD High Risk
    0.745727, # CKD-EPI-2009 - CKD Medium Risk
    0.974750, # CKD-EPI-2009 - Diabetic
    0.970187, # CKD-EPI-2009 - Hypertensive
    0.803946, # CKD-EPI-2021 - CKD Very High Risk
    0.906594, # CKD-EPI-2021 - CKD High Risk
    0.814346, # CKD-EPI-2021 - CKD Medium Risk
    0.977740, # CKD-EPI-2021 - Diabetic
    0.970549  # CKD-EPI-2021 - Hypertensive
  )
)

# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function

# Add formatted columns for display
data_white_2yr <- data_white_2yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

data_white_5yr <- data_white_5yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

# Remove repeated "Model" column values except for the first instance in each group
data_white_clean_2yr <- data_white_2yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

data_white_clean_5yr <- data_white_5yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

# Function to generate gt table with increased font and bold text
generate_gt_table <- function(data, title) {
  data %>%
    group_by(Model) %>%
    mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
    ungroup() %>%
    select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
    gt() %>%
    tab_header(title = md(paste0("**Predictive Accuracy for White Population - ", title, "**"))) %>%
    cols_label(
      Population = md("**Cohort / Population**"),
      Model = md("**Prediction Model**"),
      CI_Label = md("**C Statistic (95% CI)**")
    ) %>%
    tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
    tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
    tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
    fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
    tab_options(
      table.font.size = px(40),
      data_row.padding = px(12),
      heading.title.font.size = px(50),
      heading.title.font.weight = "bold",
      column_labels.font.size = px(50),
      column_labels.font.weight = "bold"
    )
}

# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_white_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_white_clean_5yr, "5-Year Prediction")

# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")

# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")

# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)

# Save the combined image
image_write(combined_img, "white_combined_prediction_tables.png")

```

# All

```{r}
data_all_races_2yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.779686, # MDRD - CKD Very High Risk
    0.805643, # MDRD - CKD High Risk
    0.709639, # MDRD - CKD Medium Risk
    0.899632, # MDRD - Diabetic
    0.942987, # MDRD - Hypertensive
    0.813301, # CKD-EPI-2009 - CKD Very High Risk
    0.844476, # CKD-EPI-2009 - CKD High Risk
    0.720784, # CKD-EPI-2009 - CKD Medium Risk
    0.891147, # CKD-EPI-2009 - Diabetic
    0.939097, # CKD-EPI-2009 - Hypertensive
    0.796280, # CKD-EPI-2021 - CKD Very High Risk
    0.852609, # CKD-EPI-2021 - CKD High Risk
    0.725854, # CKD-EPI-2021 - CKD Medium Risk
    0.897064, # CKD-EPI-2021 - Diabetic
    0.945428  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.755165, # MDRD - CKD Very High Risk
    0.721847, # MDRD - CKD High Risk
    0.636664, # MDRD - CKD Medium Risk
    0.704232, # MDRD - Diabetic
    0.890367, # MDRD - Hypertensive
    0.794048, # CKD-EPI-2009 - CKD Very High Risk
    0.776855, # CKD-EPI-2009 - CKD High Risk
    0.638932, # CKD-EPI-2009 - CKD Medium Risk
    0.681531, # CKD-EPI-2009 - Diabetic
    0.886220, # CKD-EPI-2009 - Hypertensive
    0.772042, # CKD-EPI-2021 - CKD Very High Risk
    0.780654, # CKD-EPI-2021 - CKD High Risk
    0.650448, # CKD-EPI-2021 - CKD Medium Risk
    0.695565, # CKD-EPI-2021 - Diabetic
    0.893176  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.802493, # MDRD - CKD Very High Risk
    0.880765, # MDRD - CKD High Risk
    0.786525, # MDRD - CKD Medium Risk
    0.929299, # MDRD - Diabetic
    0.983280, # MDRD - Hypertensive
    0.834802, # CKD-EPI-2009 - CKD Very High Risk
    0.903122, # CKD-EPI-2009 - CKD High Risk
    0.791094, # CKD-EPI-2009 - CKD Medium Risk
    0.991850, # CKD-EPI-2009 - Diabetic
    0.981115, # CKD-EPI-2009 - Hypertensive
    0.818550, # CKD-EPI-2021 - CKD Very High Risk
    0.914188, # CKD-EPI-2021 - CKD High Risk
    0.797735, # CKD-EPI-2021 - CKD Medium Risk
    0.993049, # CKD-EPI-2021 - Diabetic
    0.983250  # CKD-EPI-2021 - Hypertensive
  )
)

data_all_races_5yr <- data.frame(
  Model = rep(c("MDRD", "CKD-EPI-2009", "CKD-EPI-2021"), each = 5),
  Population = c("CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive",
                 "CKD Very High Risk", "CKD High Risk", "CKD Medium Risk", "Diabetic", "Hypertensive"),
  C_Statistic = c(
    0.768199, # MDRD - CKD Very High Risk
    0.838233, # MDRD - CKD High Risk
    0.685313, # MDRD - CKD Medium Risk
    0.808021, # MDRD - Diabetic
    0.875976, # MDRD - Hypertensive
    0.800652, # CKD-EPI-2009 - CKD Very High Risk
    0.849406, # CKD-EPI-2009 - CKD High Risk
    0.702407, # CKD-EPI-2009 - CKD Medium Risk
    0.873060, # CKD-EPI-2009 - Diabetic
    0.872798, # CKD-EPI-2009 - Hypertensive
    0.780024, # CKD-EPI-2021 - CKD Very High Risk
    0.841732, # CKD-EPI-2021 - CKD High Risk
    0.709508, # CKD-EPI-2021 - CKD Medium Risk
    0.886446, # CKD-EPI-2021 - Diabetic
    0.886314  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Lower = c(
    0.745514, # MDRD - CKD Very High Risk
    0.789057, # MDRD - CKD High Risk
    0.636895, # MDRD - CKD Medium Risk
    0.762657, # MDRD - Diabetic
    0.824808, # MDRD - Hypertensive
    0.778143, # CKD-EPI-2009 - CKD Very High Risk
    0.806559, # CKD-EPI-2009 - CKD High Risk
    0.652600, # CKD-EPI-2009 - CKD Medium Risk
    0.739571, # CKD-EPI-2009 - Diabetic
    0.819850, # CKD-EPI-2009 - Hypertensive
    0.756730, # CKD-EPI-2021 - CKD Very High Risk
    0.793558, # CKD-EPI-2021 - CKD High Risk
    0.664284, # CKD-EPI-2021 - CKD Medium Risk
    0.763909, # CKD-EPI-2021 - Diabetic
    0.836951  # CKD-EPI-2021 - Hypertensive
  ),
  CI_Upper = c(
    0.791358, # MDRD - CKD Very High Risk
    0.882210, # MDRD - CKD High Risk
    0.736944, # MDRD - CKD Medium Risk
    0.967884, # MDRD - Diabetic
    0.921812, # MDRD - Hypertensive
    0.822496, # CKD-EPI-2009 - CKD Very High Risk
    0.890232, # CKD-EPI-2009 - CKD High Risk
    0.749142, # CKD-EPI-2009 - CKD Medium Risk
    0.968422, # CKD-EPI-2009 - Diabetic
    0.928060, # CKD-EPI-2009 - Hypertensive
    0.807821, # CKD-EPI-2021 - CKD Very High Risk
    0.883747, # CKD-EPI-2021 - CKD High Risk
    0.757133, # CKD-EPI-2021 - CKD Medium Risk
    0.971421, # CKD-EPI-2021 - Diabetic
    0.928657  # CKD-EPI-2021 - Hypertensive
  )
)
    
    
    
# Load necessary libraries
library(dplyr)
library(gt)
library(magick)
library(webshot2)  # Required to capture HTML as an image
library(tidyr)     # Needed for replace_na function

# Add formatted columns for display, excluding error bar
data_all_races_2yr <- data_all_races_2yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

data_all_races_5yr <- data_all_races_5yr %>%
  mutate(
    CI_Label = sprintf("%.2f (%.2f–%.2f)", C_Statistic, CI_Lower, CI_Upper)
  )

# Remove repeated "Model" column values except for the first instance in each group
data_all_races_clean_2yr <- data_all_races_2yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

data_all_races_clean_5yr <- data_all_races_5yr %>%
  group_by(Model) %>%
  mutate(Model = ifelse(row_number() == 0, Model, "")) %>%
  ungroup()

# Function to generate gt table with enhanced font size and bold text
generate_gt_table <- function(data, title) {
  data %>%
    group_by(Model) %>%
    mutate(Model = ifelse(row_number() == 1, Model, "")) %>%
    ungroup() %>%
    select(-C_Statistic, -CI_Lower, -CI_Upper) %>%  # Exclude numeric columns not needed in display
    gt() %>%
    tab_header(title = md(paste0("**Predictive Accuracy for All Populations - ", title, "**"))) %>%
    cols_label(
      Population = md("**Cohort / Population**"),
      Model = md("**Prediction Model**"),
      CI_Label = md("**C Statistic (95% CI)**")
    ) %>%
    tab_row_group(label = md("**CKD-EPI-2021**"), rows = 11:15) %>%
    tab_row_group(label = md("**CKD-EPI-2009**"), rows = 6:10) %>%
    tab_row_group(label = md("**MDRD**"), rows = 1:5) %>%
    fmt_markdown(columns = c(Population, Model, CI_Label)) %>%  # Apply bold markdown styling to data cells
    tab_options(
      table.font.size = px(40),
      data_row.padding = px(12),
      heading.title.font.size = px(50),
      heading.title.font.weight = "bold",
      column_labels.font.size = px(50),
      column_labels.font.weight = "bold"
    )
}

# Generate the tables for 2-year and 5-year predictions
table_2yr <- generate_gt_table(data_all_races_clean_2yr, "2-Year Prediction")
table_5yr <- generate_gt_table(data_all_races_clean_5yr, "5-Year Prediction")

# Create HTML files for the gt tables
gtsave(table_2yr, "table_2yr.html")
gtsave(table_5yr, "table_5yr.html")

# Use webshot2 to save HTML as PNG
webshot("table_2yr.html", file = "table_2yr.png")
webshot("table_5yr.html", file = "table_5yr.png")

# Read the images and stack them vertically
img_2yr <- image_read("table_2yr.png")
img_5yr <- image_read("table_5yr.png")
combined_img <- image_append(c(img_2yr, img_5yr), stack = TRUE)

# Save the combined image
image_write(combined_img, "all_combined_prediction_tables.png")

```
